/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

import database.Database;
import entities.ChiTietHoiDong;
import entities.ChiTietPhieuDiem;
import entities.HocKy;
import entities.HoiDong;
import entities.Khoa;
import entities.LoaiHoiDong;
import entities.LuanVan;
import entities.PhanCong;
import entities.PhieuDangKy;
import entities.PhieuDiem;
import entities.SinhVien;
import gui_dialog.HoiDong_Dialog;

import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.GroupLayout.Alignment;
import javax.swing.DefaultComboBoxModel;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import com.toedter.calendar.JDateChooser;

import dao.QuanLyChiTietHoiDong;
import dao.QuanLyChiTietPhieuDiem;
import dao.QuanLyHocKy;
import dao.QuanLyHoiDong;
import dao.QuanLyKhoa;
import dao.QuanLyLoaiHoiDong;
import dao.QuanLyLuanVan;
import dao.QuanLyPhanCong;
import dao.QuanLyPhieuDangKy;
import dao.QuanLyPhieuDiem;
import dao.QuanLySinhVien;

import javax.swing.JButton;
import java.awt.Color;
import javax.swing.ImageIcon;
import java.awt.Font;

/**
 *
 * @author nmrhu
 */
public class PhanCong_Gui extends javax.swing.JPanel {

	/**
	 * Creates new form QuanLyTaiKhoan_Gu
	 */
	public PhanCong_Gui() {
		setSize(new Dimension(1500, 700));
		initComponents();

		DocDuLieuDatabaseVaoComboboxHocKy();
		DocDuLieuDatabaseVaoComboboxKhoa();
		DocDuLieuDatabaseVaoComboboxLHD();
		DocDuLieuDatabaseVaoTable("", 0, khoa, hk);
		clear();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {
		Database.getInstance().connect();
		qlhd = new QuanLyHoiDong();
		qllhd = new QuanLyLoaiHoiDong();
		qllv = new QuanLyLuanVan();
		qlsv = new QuanLySinhVien();
		qlpdk = new QuanLyPhieuDangKy();
		qlhk = new QuanLyHocKy();
		qlkhoa = new QuanLyKhoa();
		qlpc = new QuanLyPhanCong();
		qlcthd = new QuanLyChiTietHoiDong();
		qlctpd = new QuanLyChiTietPhieuDiem();
		qlpd = new QuanLyPhieuDiem();

		jPanel3 = new javax.swing.JPanel();
		jPanel3.setBackground(Color.WHITE);
		jLabel1 = new javax.swing.JLabel();
		jPanel4 = new javax.swing.JPanel();
		jPanel1 = new javax.swing.JPanel();
		cbbLHD = new javax.swing.JComboBox<>();
		cbbHD = new javax.swing.JComboBox<>();
		btnThongTinHD = new javax.swing.JButton();
		btnThongTinHD.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				HoiDong_Dialog dialog = new HoiDong_Dialog(main, true);
				dialog.setTitle("Chi tiết hội đồng");
				dialog.setLocationRelativeTo(main);
				dialog.setData(3, hd);
				dialog.setVisible(true);
			}
		});
		jPanel6 = new javax.swing.JPanel();
		txtTimSV = new javax.swing.JTextField();
		btnTim = new javax.swing.JButton();
		btnLoc = new javax.swing.JButton();
		cbbKhoa = new javax.swing.JComboBox<>();
		jScrollPane1 = new javax.swing.JScrollPane();
		jTable1 = new javax.swing.JTable();
		jPanel5 = new javax.swing.JPanel();
		btnPhanCong = new javax.swing.JButton();
		btnPhanCong.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				if (txtMaHD.getText().equals(""))
					JOptionPane.showMessageDialog(main, "Chọn hội đồng cần phân công!");
				else
					phanCongHoiDong();
			}
		});
		jLabel2 = new javax.swing.JLabel();
		jLabel2.setFont(new Font("Tahoma", Font.PLAIN, 20));
		jLabel3 = new javax.swing.JLabel();
		jLabel3.setFont(new Font("Tahoma", Font.PLAIN, 20));
		txtMaHD = new javax.swing.JTextField();
		txtMaHD.setFont(new Font("Tahoma", Font.PLAIN, 20));
		txtMaHD.setEditable(false);
		txtPDK = new javax.swing.JTextField();
		txtPDK.setFont(new Font("Tahoma", Font.PLAIN, 20));
		txtPDK.setEditable(false);
		jLabel4 = new javax.swing.JLabel();
		jLabel4.setFont(new Font("Tahoma", Font.PLAIN, 20));
		jLabel5 = new javax.swing.JLabel();
		jLabel5.setFont(new Font("Tahoma", Font.PLAIN, 20));
		txtNgayPhanCong = new javax.swing.JTextField();
		txtNgayPhanCong.setFont(new Font("Tahoma", Font.PLAIN, 20));
		txtNgayPhanCong.setEditable(false);
		long millis = System.currentTimeMillis();
		java.sql.Date ngayPC = new java.sql.Date(millis);
		txtNgayPhanCong.setText("" + ngayPC);

		setBackground(new java.awt.Color(255, 255, 255));

		jPanel3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

		jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
		jLabel1.setForeground(new java.awt.Color(0, 153, 255));
		jLabel1.setText("Xử lý / Phân công hội đồng");

		javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
		jPanel3.setLayout(jPanel3Layout);
		jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel3Layout
						.createSequentialGroup().addContainerGap().addComponent(jLabel1,
								javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(1124, Short.MAX_VALUE)));
		jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jLabel1,
								javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap()));

		jPanel4.setBackground(new java.awt.Color(255, 255, 255));
		jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

		jPanel1.setBackground(new java.awt.Color(255, 255, 255));
		jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Hội đồng"));

		DefaultComboBoxModel<LoaiHoiDong> dmLHD = new DefaultComboBoxModel<LoaiHoiDong>();
		cbbLHD.setModel(dmLHD);
		cbbLHD.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				lhd = (LoaiHoiDong) cbbLHD.getSelectedItem();
				DocDuLieuDatabaseVaoComboboxHD(lhd);
			}
		});

		DefaultComboBoxModel<HoiDong> dmHD = new DefaultComboBoxModel<HoiDong>();
		cbbHD.setModel(dmHD);
		cbbHD.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				hd = (HoiDong) cbbHD.getSelectedItem();
			}
		});
		btnThongTinHD.setBackground(new java.awt.Color(255, 255, 255));
		btnThongTinHD.setIcon(new javax.swing.ImageIcon("image/view_30px.png")); // NOI18N
		btnThongTinHD.setText("Xem thông tin hội đồng");

		JButton btnChon = new JButton();
		btnChon.setIcon(new ImageIcon("image/check_30px.png"));
		btnChon.setText("Chọn");
		btnChon.setBackground(Color.WHITE);
		btnChon.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				txtMaHD.setText("" + hd.getMaHD());
			}
		});

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup().addContainerGap()
						.addComponent(cbbLHD, GroupLayout.PREFERRED_SIZE, 279, GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(ComponentPlacement.RELATED)
						.addComponent(cbbHD, GroupLayout.PREFERRED_SIZE, 233, GroupLayout.PREFERRED_SIZE).addGap(26)
						.addComponent(btnChon, GroupLayout.PREFERRED_SIZE, 130, GroupLayout.PREFERRED_SIZE).addGap(18)
						.addComponent(btnThongTinHD, GroupLayout.PREFERRED_SIZE, 303, GroupLayout.PREFERRED_SIZE)
						.addContainerGap(411, Short.MAX_VALUE)));
		jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup().addContainerGap()
						.addGroup(jPanel1Layout.createParallelGroup(Alignment.LEADING)
								.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
										.addComponent(cbbLHD, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
												GroupLayout.PREFERRED_SIZE)
										.addComponent(cbbHD, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
												GroupLayout.PREFERRED_SIZE)
										.addComponent(btnThongTinHD))
								.addComponent(btnChon, GroupLayout.PREFERRED_SIZE, 39, GroupLayout.PREFERRED_SIZE))
						.addContainerGap(22, Short.MAX_VALUE)));
		jPanel1.setLayout(jPanel1Layout);

		jPanel6.setBackground(new java.awt.Color(255, 255, 255));
		jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Sinh viên:"));

		btnTim.setBackground(new java.awt.Color(255, 255, 255));
		btnTim.setIcon(new javax.swing.ImageIcon("image/search_30px.png")); // NOI18N
		btnTim.setText("Tìm");
		btnTim.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				String txt = txtTimSV.getText();
				DocDuLieuDatabaseVaoTable(txt, 1, null, null);
			}
		});

		btnLoc.setIcon(new javax.swing.ImageIcon("image/Mail Filter_30px.png")); // NOI18N
		btnLoc.setText("Lọc");
		btnLoc.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				DocDuLieuDatabaseVaoTable("", 0, khoa, hk);
				txtTimSV.setText("");
			}
		});

		DefaultComboBoxModel<Khoa> dmKhoa = new DefaultComboBoxModel<Khoa>();
		cbbKhoa.setModel(dmKhoa);
		cbbKhoa.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				khoa = (Khoa) cbbKhoa.getSelectedItem();
			}
		});

		jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

		dm = new javax.swing.table.DefaultTableModel(new Object[][] {

		}, new String[] { "Mã đăng ký", "Sinh viên", "Tên luận văn", "Học kỳ" }) {
			boolean[] canEdit = new boolean[] { false, false, false, false };

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
			}
		};
		jTable1.setModel(dm);
		jTable1.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent arg0) {
				int row = jTable1.getSelectedRow();
				TableModel model = jTable1.getModel();
				int maPDK = Integer.parseInt(model.getValueAt(row, 0).toString());
				pdk = qlpdk.chiTietPhieuDangKy(maPDK);

				txtPDK.setText("" + pdk.getMaPDK());
				btnPhanCong.setEnabled(true);
			}
		});
		jTable1.setGridColor(new java.awt.Color(255, 255, 255));
		jTable1.setRowHeight(40);
		jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		jTable1.setFont(new java.awt.Font("Times New Roman", 0, 26)); // NOI18N
		jScrollPane1.setViewportView(jTable1);

		cbbHK = new javax.swing.JComboBox<HocKy>();
		DefaultComboBoxModel<HocKy> dmHK = new DefaultComboBoxModel<HocKy>();
		cbbHK.setModel(dmHK);
		cbbHK.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				hk = (HocKy) cbbHK.getSelectedItem();
			}
		});

		javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
		jPanel6Layout.setHorizontalGroup(jPanel6Layout.createParallelGroup(Alignment.TRAILING).addGroup(jPanel6Layout
				.createSequentialGroup().addContainerGap()
				.addGroup(jPanel6Layout.createParallelGroup(Alignment.TRAILING)
						.addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 1394, Short.MAX_VALUE)
						.addGroup(jPanel6Layout.createSequentialGroup()
								.addComponent(txtTimSV, GroupLayout.PREFERRED_SIZE, 390, GroupLayout.PREFERRED_SIZE)
								.addGap(3)
								.addComponent(btnTim, GroupLayout.PREFERRED_SIZE, 130, GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(ComponentPlacement.RELATED, 176, Short.MAX_VALUE)
								.addComponent(cbbHK, GroupLayout.PREFERRED_SIZE, 305, GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(ComponentPlacement.RELATED)
								.addComponent(cbbKhoa, GroupLayout.PREFERRED_SIZE, 262, GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(ComponentPlacement.RELATED)
								.addComponent(btnLoc, GroupLayout.PREFERRED_SIZE, 110, GroupLayout.PREFERRED_SIZE)))
				.addContainerGap()));
		jPanel6Layout
				.setVerticalGroup(
						jPanel6Layout.createParallelGroup(Alignment.LEADING)
								.addGroup(jPanel6Layout.createSequentialGroup()
										.addGroup(jPanel6Layout.createParallelGroup(Alignment.BASELINE)
												.addComponent(txtTimSV, GroupLayout.PREFERRED_SIZE,
														GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
												.addComponent(btnTim)
												.addComponent(cbbKhoa, GroupLayout.PREFERRED_SIZE,
														GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
												.addComponent(btnLoc).addComponent(cbbHK, GroupLayout.PREFERRED_SIZE,
														GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(ComponentPlacement.RELATED)
										.addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
										.addContainerGap()));
		jPanel6.setLayout(jPanel6Layout);

		javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
		jPanel4.setLayout(jPanel4Layout);
		jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel4Layout.createSequentialGroup().addContainerGap()
						.addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
						.addContainerGap()));
		jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel4Layout.createSequentialGroup().addContainerGap()
						.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addContainerGap()));

		jPanel5.setBackground(new java.awt.Color(255, 255, 255));
		jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin :"));

		btnPhanCong.setBackground(new java.awt.Color(255, 255, 255));
		btnPhanCong.setIcon(new javax.swing.ImageIcon("image/add_30px.png")); // NOI18N
		btnPhanCong.setText("Phân công");

		jLabel2.setText("Hội đồng:");

		jLabel3.setText("Mã đăng ký:");

		jLabel4.setText("Ngày phân công:");

		jLabel5.setText("Ngày báo cáo:");

		txtNgayBaoCao = new JDateChooser();
		txtNgayBaoCao.setDate(new Date());

		javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
		jPanel5Layout
				.setHorizontalGroup(jPanel5Layout.createParallelGroup(Alignment.TRAILING).addGroup(Alignment.LEADING,
						jPanel5Layout.createSequentialGroup().addContainerGap()
								.addGroup(jPanel5Layout.createParallelGroup(Alignment.LEADING, false)
										.addComponent(jLabel2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE)
										.addComponent(jLabel3, GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE))
								.addGap(18)
								.addGroup(jPanel5Layout
										.createParallelGroup(Alignment.LEADING).addComponent(txtPDK, 226, 226, 226)
										.addComponent(txtMaHD, Alignment.TRAILING, 226, 226, 226))
								.addGap(18)
								.addGroup(jPanel5Layout.createParallelGroup(Alignment.LEADING, false)
										.addComponent(jLabel4, GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
										.addComponent(jLabel5, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE))
								.addPreferredGap(ComponentPlacement.UNRELATED)
								.addGroup(jPanel5Layout.createParallelGroup(Alignment.LEADING, false)
										.addComponent(txtNgayBaoCao, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE)
										.addComponent(txtNgayPhanCong, GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE))
								.addGap(18)
								.addComponent(btnPhanCong, GroupLayout.PREFERRED_SIZE, 306, GroupLayout.PREFERRED_SIZE)
								.addContainerGap(204, Short.MAX_VALUE)));
		jPanel5Layout.setVerticalGroup(jPanel5Layout.createParallelGroup(Alignment.LEADING)
				.addGroup(jPanel5Layout.createSequentialGroup()
						.addGroup(jPanel5Layout.createParallelGroup(Alignment.BASELINE).addComponent(jLabel2)
								.addComponent(txtMaHD, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
										GroupLayout.PREFERRED_SIZE)
								.addComponent(jLabel4)
								.addComponent(txtNgayPhanCong, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
										GroupLayout.PREFERRED_SIZE)
								.addComponent(btnPhanCong))
						.addGap(8)
						.addGroup(jPanel5Layout.createParallelGroup(Alignment.LEADING)
								.addGroup(jPanel5Layout.createParallelGroup(Alignment.BASELINE).addComponent(jLabel3)
										.addComponent(txtPDK, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
												GroupLayout.PREFERRED_SIZE)
										.addComponent(jLabel5))
								.addComponent(txtNgayBaoCao, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
										GroupLayout.PREFERRED_SIZE))
						.addContainerGap(23, Short.MAX_VALUE)));
		jPanel5.setLayout(jPanel5Layout);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		layout.setHorizontalGroup(layout.createParallelGroup(Alignment.LEADING).addGroup(layout.createSequentialGroup()
				.addContainerGap()
				.addGroup(layout.createParallelGroup(Alignment.LEADING)
						.addComponent(jPanel4, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE,
								Short.MAX_VALUE)
						.addComponent(jPanel5, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 1470, Short.MAX_VALUE)
						.addComponent(jPanel3, GroupLayout.DEFAULT_SIZE, 1470, Short.MAX_VALUE))
				.addContainerGap()));
		layout.setVerticalGroup(layout.createParallelGroup(Alignment.LEADING).addGroup(layout.createSequentialGroup()
				.addContainerGap()
				.addComponent(jPanel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
				.addGap(25).addComponent(jPanel4, GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
				.addPreferredGap(ComponentPlacement.UNRELATED)
				.addComponent(jPanel5, GroupLayout.PREFERRED_SIZE, 125, GroupLayout.PREFERRED_SIZE).addContainerGap()));
		this.setLayout(layout);
	}

	public void XoaHetDuLieuTrenComboboxLHD() {
		DefaultComboBoxModel<LoaiHoiDong> dm = (DefaultComboBoxModel<LoaiHoiDong>) cbbLHD.getModel();
		dm.removeAllElements();
	}

	public void DocDuLieuDatabaseVaoComboboxLHD() {
		XoaHetDuLieuTrenComboboxLHD();
		List<LoaiHoiDong> list = new ArrayList<LoaiHoiDong>();
		qllhd = new QuanLyLoaiHoiDong();
		list = qllhd.dsLoaiHoiDong();

		DefaultComboBoxModel<LoaiHoiDong> dm = (DefaultComboBoxModel<LoaiHoiDong>) cbbLHD.getModel();
		for (LoaiHoiDong lhd : list) {
			dm.addElement(lhd);
		}
	}

	public void XoaHetDuLieuTrenComboboxHD() {
		DefaultComboBoxModel<HoiDong> dm = (DefaultComboBoxModel<HoiDong>) cbbHD.getModel();
		dm.removeAllElements();
	}

	public void DocDuLieuDatabaseVaoComboboxHD(LoaiHoiDong lhd) {
		XoaHetDuLieuTrenComboboxHD();
		List<HoiDong> list = new ArrayList<HoiDong>();
		qlhd = new QuanLyHoiDong();
		list = qlhd.tim_HoiDong_Loai(lhd.getMaLHD());

		DefaultComboBoxModel<HoiDong> dm = (DefaultComboBoxModel<HoiDong>) cbbHD.getModel();
		for (HoiDong hd : list) {
			dm.addElement(hd);
		}
	}

	public void XoaHetDuLieuTrenComboboxKhoa() {
		DefaultComboBoxModel<Khoa> dm = (DefaultComboBoxModel<Khoa>) cbbKhoa.getModel();
		dm.removeAllElements();
	}

	public void DocDuLieuDatabaseVaoComboboxKhoa() {
		XoaHetDuLieuTrenComboboxKhoa();
		List<Khoa> list = new ArrayList<Khoa>();
		qlkhoa = new QuanLyKhoa();
		list = qlkhoa.dsKhoa();

		DefaultComboBoxModel<Khoa> dm = (DefaultComboBoxModel<Khoa>) cbbKhoa.getModel();
		for (Khoa khoa : list) {
			dm.addElement(khoa);
		}
	}

	public void XoaHetDuLieuTrenComboboxHocKy() {
		DefaultComboBoxModel<HocKy> dm = (DefaultComboBoxModel<HocKy>) cbbHK.getModel();
		dm.removeAllElements();
	}

	public void DocDuLieuDatabaseVaoComboboxHocKy() {
		XoaHetDuLieuTrenComboboxHocKy();
		List<HocKy> list = new ArrayList<HocKy>();
		qlhk = new QuanLyHocKy();
		list = qlhk.dsHocKy();

		DefaultComboBoxModel<HocKy> dm = (DefaultComboBoxModel<HocKy>) cbbHK.getModel();
		for (HocKy hk : list) {
			dm.addElement(hk);
		}
	}

	public void DocDuLieuDatabaseVaoTable(String txt, int tim, Khoa k, HocKy hocKy) {
		dm = (DefaultTableModel) jTable1.getModel();
		dm.setRowCount(0);
		List<PhieuDangKy> list = new ArrayList<PhieuDangKy>();
		qlpdk = new QuanLyPhieuDangKy();

		if (tim == 1) {
			if (txt.equals(""))
				list = qlpdk.dsPhieuDangKy();
			else
				list = qlpdk.tim_dsPhieuDangKy_Txt(txt);
		} else {
			list = qlpdk.dsPhieuDangKy_HocKy_Khoa(hocKy.getMaHK(), k.getMaKhoa());
		}

		for (PhieuDangKy pdk : list) {
			SinhVien sv = qlsv.chiTietSinhVien(pdk.getSinhVien().getMaSV());
			LuanVan lv = qllv.chiTietLuanVan(pdk.getLuanVan().getMaLV());
			HocKy hk = qlhk.chiTietHocKy(lv.getHocKy().getMaHK());
			dm.addRow(new Object[] { pdk.getMaPDK(), sv.getHoTen(), lv.getTenLV(), hk.getTenHK() });
		}
	}

	public void phanCongHoiDong() {
		int soLanPC = qlpc.demPhanCong_LoaiHoiDong_PhieuDangKy(pdk, hd);
		if (soLanPC < 2) {

			long ngayBC = txtNgayBaoCao.getDate().getTime();
			java.sql.Date ngayBC_sql = new java.sql.Date(ngayBC);

			long millis = System.currentTimeMillis();
			java.sql.Date ngayPC = new java.sql.Date(millis);

			PhanCong pc = new PhanCong(pdk, hd, ngayPC, ngayBC_sql);
			PhieuDiem pd = new PhieuDiem(pc);
			if(hd.getLoaiHoiDong().getMaLHD() == 1) {				
				try {
					qlpc.themPhanCong(pc);
					qlpd.themPhieuDiem(pd);

					qlcthd = new QuanLyChiTietHoiDong();
					qlctpd = new QuanLyChiTietPhieuDiem();

					List<ChiTietHoiDong> list_CTHD = new ArrayList<ChiTietHoiDong>();
					list_CTHD = qlcthd.tim_ChiTietHoiDong_HoiDong(pc.getHoiDong().getMaHD());

					for (ChiTietHoiDong chiTietHoiDong : list_CTHD) {
						ChiTietPhieuDiem ctpd = new ChiTietPhieuDiem(new PhieuDiem(qlpd.getmaPD()), chiTietHoiDong);
						qlctpd.themChiTietPhieuDiem(ctpd);
					}

					clear();
					pdk = null;
					JOptionPane.showMessageDialog(this, "Phân công thành công!");
					txtPDK.setText("");
					txtMaHD.setText("");

				} catch (Exception e) {
					JOptionPane.showMessageDialog(this, "Hội đồng đã phân công cho Phiếu đăng ký");
				}
			}else if(hd.getLoaiHoiDong().getMaLHD() == 2) {
				if(kiemTraDiemThamDinh(pdk.getMaPDK())) {
					try {
						qlpc.themPhanCong(pc);
						qlpd.themPhieuDiem(pd);

						qlcthd = new QuanLyChiTietHoiDong();
						qlctpd = new QuanLyChiTietPhieuDiem();

						List<ChiTietHoiDong> list_CTHD = new ArrayList<ChiTietHoiDong>();
						list_CTHD = qlcthd.tim_ChiTietHoiDong_HoiDong(pc.getHoiDong().getMaHD());

						for (ChiTietHoiDong chiTietHoiDong : list_CTHD) {
							ChiTietPhieuDiem ctpd = new ChiTietPhieuDiem(new PhieuDiem(qlpd.getmaPD()), chiTietHoiDong);
							qlctpd.themChiTietPhieuDiem(ctpd);
						}

						clear();
						pdk = null;
						JOptionPane.showMessageDialog(this, "Phân công thành công!");
						txtPDK.setText("");
						txtMaHD.setText("");

					} catch (Exception e) {
						JOptionPane.showMessageDialog(this, "Hội đồng đã phân công cho Phiếu đăng ký");
					}
				}
			}
												
		} else {
			LoaiHoiDong lhd = qllhd.chiTietLoaiHoiDong(hd.getLoaiHoiDong().getMaLHD());
			JOptionPane.showMessageDialog(this,
					"Chỉ được phân công tối đa 2 lần hội đồng" + lhd.getTenLHD() + " cho sinh viên");
		}
	}

	public boolean kiemTraDiemThamDinh(int maPDK) {
		List<PhieuDiem> list = new ArrayList<PhieuDiem>();
		qlpd = new QuanLyPhieuDiem();
		try {
			list = qlpd.ds_DiemThamDinh(maPDK);
			if(list.size()==0) {
				JOptionPane.showMessageDialog(this, "Chưa có điểm thẩm định!");
				return false;
			}
			for (PhieuDiem phieuDiem : list) {
				if(phieuDiem.getDiemTrungBinh() >= 5)
					return true;
			}
		} catch (Exception e) {
			JOptionPane.showMessageDialog(this, "Chưa có điểm thẩm định!");
			return false;
		}		
		JOptionPane.showMessageDialog(this, "Điểm thẩm định chưa đạt yêu cầu để phân công hội đồng báo cáo!");
		return false;
	}
	
	public void clear() {
		btnPhanCong.setEnabled(false);
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton btnTim;
	private javax.swing.JButton btnPhanCong;
	private javax.swing.JButton btnLoc;
	private javax.swing.JButton btnThongTinHD;
	private javax.swing.JComboBox<HocKy> cbbHK;
	private javax.swing.JComboBox<LoaiHoiDong> cbbLHD;
	private javax.swing.JComboBox<HoiDong> cbbHD;
	private javax.swing.JComboBox<Khoa> cbbKhoa;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel3;
	private javax.swing.JPanel jPanel4;
	private javax.swing.JPanel jPanel5;
	private javax.swing.JPanel jPanel6;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTable jTable1;
	private javax.swing.JTextField txtMaHD;
	private javax.swing.JTextField txtPDK;
	private javax.swing.JTextField txtNgayPhanCong;
	private javax.swing.JTextField txtTimSV;
	private javax.swing.table.DefaultTableModel dm;

	private JDateChooser txtNgayBaoCao;
	// End of variables declaration//GEN-END:variables

	private QuanLyHoiDong qlhd;
	private QuanLyLoaiHoiDong qllhd;
	private QuanLyLuanVan qllv;
	private QuanLySinhVien qlsv;
	private QuanLyKhoa qlkhoa;
	private QuanLyPhieuDangKy qlpdk;
	private QuanLyHocKy qlhk;
	private QuanLyPhanCong qlpc;
	private QuanLyPhieuDiem qlpd;
	private QuanLyChiTietHoiDong qlcthd;
	private QuanLyChiTietPhieuDiem qlctpd;

	public static Main main;

	private LoaiHoiDong lhd;
	private HoiDong hd;

	private PhieuDangKy pdk;

	private HocKy hk;
	private Khoa khoa;
}
