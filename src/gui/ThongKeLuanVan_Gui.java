/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.SQLException;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

import dao.QuanLyGiangVien;
import dao.QuanLyHocKy;
import dao.QuanLyKhoa;
import dao.QuanLyLuanVan;
import dao.QuanLyPhieuDangKy;
import dao.QuanLySinhVien;
import database.Database;
import entities.GiangVien;
import entities.HocKy;
import entities.HoiDong;
import entities.Khoa;
import entities.LoaiHoiDong;
import entities.LuanVan;
import entities.PhieuDangKy;
import entities.SinhVien;

import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JComboBox;
import javax.swing.GroupLayout.Alignment;
import javax.swing.DefaultComboBoxModel;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.JButton;
import javax.swing.ImageIcon;
import java.awt.Color;

/**
 *
 * @author nmrhu
 */
public class ThongKeLuanVan_Gui extends javax.swing.JPanel {

	/**
	 * Creates new form QuanLyTaiKhoan_Gu
	 */
	public ThongKeLuanVan_Gui() {
		setSize(new Dimension(1500, 700));
		initComponents();

		DocDuLieuDatabaseVaoComboboxHocKy();
		DocDuLieuDatabaseVaoComboboxKhoa();
		DocDuLieuDatabaseVaoTable();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {
		Database.getInstance().connect();
		qlhk = new QuanLyHocKy();
		qlkhoa = new QuanLyKhoa();
		qllv = new QuanLyLuanVan();
		qlgv = new QuanLyGiangVien();
		qlpdk = new QuanLyPhieuDangKy();

		jPanel3 = new javax.swing.JPanel();
		jPanel3.setBackground(Color.WHITE);
		jLabel1 = new javax.swing.JLabel();
		jPanel4 = new javax.swing.JPanel();
		jScrollPane1 = new javax.swing.JScrollPane();
		jTable1 = new javax.swing.JTable();

		setBackground(new java.awt.Color(255, 255, 255));

		jPanel3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

		jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
		jLabel1.setForeground(new java.awt.Color(0, 153, 255));
		jLabel1.setText("Thống kê / Luận văn");

		javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
		jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(Alignment.LEADING)
				.addGroup(jPanel3Layout.createSequentialGroup().addContainerGap()
						.addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 344, GroupLayout.PREFERRED_SIZE)
						.addContainerGap(1109, Short.MAX_VALUE)));
		jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(Alignment.TRAILING).addGroup(jPanel3Layout
				.createSequentialGroup().addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				.addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 40, GroupLayout.PREFERRED_SIZE).addContainerGap()));
		jPanel3.setLayout(jPanel3Layout);

		jPanel4.setBackground(new java.awt.Color(255, 255, 255));
		jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

		jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

		dm = new javax.swing.table.DefaultTableModel(new Object[][] {

		}, new String[] { "Mã luận văn", "Tên luận văn", "GVHD", "Sỉ số tối đa", "Số lượng đăng ký", "Số lượng đạt",
				"Số lượng không đạt" }) {
			boolean[] canEdit = new boolean[] { false, false, false, false, false, false };

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
			}
		};
		jTable1.setModel(dm);
		jTable1.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent arg0) {
				int row = jTable1.getSelectedRow();
				TableModel model = jTable1.getModel();
				String maLV = model.getValueAt(row, 0).toString();
			}
		});
		jTable1.setGridColor(new java.awt.Color(255, 255, 255));
		jTable1.setRowHeight(40);
		jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		jTable1.setFont(new java.awt.Font("Times New Roman", 0, 26)); // NOI18N
		jScrollPane1.setViewportView(jTable1);

		cbbKhoa = new JComboBox<Khoa>();
		DefaultComboBoxModel<Khoa> dmKhoa = new DefaultComboBoxModel<Khoa>();
		cbbKhoa.setModel(dmKhoa);
		cbbKhoa.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				khoa = (Khoa) cbbKhoa.getSelectedItem();
			}
		});

		JButton btnLoc = new JButton();
		btnLoc.setBackground(Color.WHITE);
		btnLoc.setIcon(new ImageIcon("image/Mail Filter_30px.png"));
		btnLoc.setText("Lọc");
		btnLoc.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				DocDuLieuDatabaseVaoTable();
			}
		});

		cbbHK = new javax.swing.JComboBox<HocKy>();
		DefaultComboBoxModel<HocKy> dmHK = new DefaultComboBoxModel<HocKy>();
		cbbHK.setModel(dmHK);
		cbbHK.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				hocKy = (HocKy) cbbHK.getSelectedItem();
			}
		});

		JButton btnIn = new JButton();
		btnIn.setText("In báo cáo");
		btnIn.setBackground(Color.WHITE);
		btnIn.setIcon(new ImageIcon("image/print_30px.png"));
		btnIn.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				printBaoCao();
			}
		});

		javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
		jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(Alignment.TRAILING).addGroup(jPanel4Layout
				.createSequentialGroup().addContainerGap()
				.addGroup(jPanel4Layout.createParallelGroup(Alignment.TRAILING)
						.addComponent(jScrollPane1, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 1436, Short.MAX_VALUE)
						.addGroup(jPanel4Layout.createSequentialGroup()
								.addComponent(btnIn, GroupLayout.PREFERRED_SIZE, 129, GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(ComponentPlacement.RELATED, 613, Short.MAX_VALUE)
								.addComponent(cbbHK, GroupLayout.PREFERRED_SIZE, 269, GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(ComponentPlacement.RELATED)
								.addComponent(cbbKhoa, GroupLayout.PREFERRED_SIZE, 269, GroupLayout.PREFERRED_SIZE)
								.addGap(18)
								.addComponent(btnLoc, GroupLayout.PREFERRED_SIZE, 129, GroupLayout.PREFERRED_SIZE)))
				.addContainerGap()));
		jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(Alignment.LEADING).addGroup(jPanel4Layout
				.createSequentialGroup().addContainerGap()
				.addGroup(jPanel4Layout.createParallelGroup(Alignment.LEADING)
						.addGroup(jPanel4Layout.createParallelGroup(Alignment.BASELINE)
								.addComponent(btnLoc, GroupLayout.PREFERRED_SIZE, 39, GroupLayout.PREFERRED_SIZE)
								.addComponent(cbbKhoa, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
										GroupLayout.PREFERRED_SIZE)
								.addComponent(cbbHK, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
										GroupLayout.PREFERRED_SIZE))
						.addComponent(btnIn, GroupLayout.PREFERRED_SIZE, 39, GroupLayout.PREFERRED_SIZE))
				.addPreferredGap(ComponentPlacement.RELATED)
				.addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 492, Short.MAX_VALUE).addContainerGap()));
		jPanel4.setLayout(jPanel4Layout);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		layout.setHorizontalGroup(layout.createParallelGroup(Alignment.LEADING).addGroup(Alignment.TRAILING,
				layout.createSequentialGroup().addContainerGap()
						.addGroup(layout.createParallelGroup(Alignment.TRAILING)
								.addComponent(jPanel4, Alignment.LEADING, GroupLayout.DEFAULT_SIZE,
										GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(jPanel3, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 1198,
										Short.MAX_VALUE))
						.addContainerGap()));
		layout.setVerticalGroup(layout.createParallelGroup(Alignment.LEADING).addGroup(layout.createSequentialGroup()
				.addContainerGap()
				.addComponent(jPanel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
				.addGap(18).addComponent(jPanel4, GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE).addContainerGap()));
		this.setLayout(layout);
	}

	public void XoaHetDuLieuTrenComboboxKhoa() {
		DefaultComboBoxModel<Khoa> dm = (DefaultComboBoxModel<Khoa>) cbbKhoa.getModel();
		dm.removeAllElements();
	}

	public void DocDuLieuDatabaseVaoComboboxKhoa() {
		XoaHetDuLieuTrenComboboxKhoa();
		List<Khoa> list = new ArrayList<Khoa>();
		qlkhoa = new QuanLyKhoa();
		list = qlkhoa.dsKhoa();

		DefaultComboBoxModel<Khoa> dm = (DefaultComboBoxModel<Khoa>) cbbKhoa.getModel();
		for (Khoa khoa : list) {
			dm.addElement(khoa);
		}
	}

	public void XoaHetDuLieuTrenComboboxHocKy() {
		DefaultComboBoxModel<HocKy> dm = (DefaultComboBoxModel<HocKy>) cbbHK.getModel();
		dm.removeAllElements();
	}

	public void DocDuLieuDatabaseVaoComboboxHocKy() {
		XoaHetDuLieuTrenComboboxHocKy();
		List<HocKy> list = new ArrayList<HocKy>();
		qlhk = new QuanLyHocKy();
		list = qlhk.dsHocKy();

		DefaultComboBoxModel<HocKy> dm = (DefaultComboBoxModel<HocKy>) cbbHK.getModel();
		for (HocKy hk : list) {
			dm.addElement(hk);
		}
	}

	public void DocDuLieuDatabaseVaoTable() {
		dm = (DefaultTableModel) jTable1.getModel();
		dm.setRowCount(0);
		List<LuanVan> list = new ArrayList<LuanVan>();
		qllv = new QuanLyLuanVan();

		list = qllv.tim_LuanVanTheoKhoa(khoa.getMaKhoa(), hocKy.getMaHK());

		for (LuanVan lv : list) {
			Khoa khoa = qlkhoa.chiTietKhoa(lv.getKhoa().getMaKhoa());
			GiangVien gv = qlgv.chiTietGiangVien(lv.getGiangVien().getMaGV());
			int dat = qlpdk.demDat_KhongDat_LuanVan(lv.getMaLV(), 1);
			int khongDat = qlpdk.demDat_KhongDat_LuanVan(lv.getMaLV(), 0);
			int daDangKy;
			try {
				daDangKy = qlpdk.demSoDK_LuanVan(lv);
			} catch (SQLException e) {
				daDangKy = 0;
			}
			dm.addRow(new Object[] { lv.getMaLV(), lv.getTenLV(), gv.getHoTen(), lv.getSoLuongDk(), daDangKy, dat,
					khongDat });
		}
	}

	public void printBaoCao() {
		MessageFormat header = new MessageFormat("Khoa: " + khoa.getTenKhoa() + "    Học kỳ: " + hocKy.getTenHK());
		MessageFormat footer = new MessageFormat("Trang {0,number,integer}");
		try {
			jTable1.print(JTable.PrintMode.FIT_WIDTH, header, footer);
		} catch (Exception e) {

		}
	}

	private javax.swing.JLabel jLabel1;
	private javax.swing.JPanel jPanel3;
	private javax.swing.JPanel jPanel4;
	private javax.swing.JScrollPane jScrollPane1;
	private static javax.swing.JTable jTable1;
	private javax.swing.JComboBox<HocKy> cbbHK;
	private javax.swing.JComboBox<Khoa> cbbKhoa;
	private static javax.swing.table.DefaultTableModel dm;

	private QuanLyHocKy qlhk;
	private QuanLyKhoa qlkhoa;
	private QuanLyLuanVan qllv;
	private QuanLyPhieuDangKy qlpdk;
	private QuanLyGiangVien qlgv;

	private Khoa khoa;
	private HocKy hocKy;

	public static Main main;
}
